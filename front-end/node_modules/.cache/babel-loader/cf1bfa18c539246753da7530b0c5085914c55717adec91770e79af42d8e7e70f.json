{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marin\\\\Desktop\\\\E-commerce\\\\frontend\\\\src\\\\Context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport all_product from \"../Components/Assets/all_product\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst getDefaultCart = () => {\n  let cart = {};\n  for (let index = 0; index < all_product.length + 1; index++) {\n    cart[index] = 0;\n  }\n  return cart;\n};\nconst ShopContextProvider = props => {\n  _s();\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n  const addToCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] + 1\n    }));\n  };\n  const removeFromCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] - 1\n    }));\n  };\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        let itemInfo = all_product.find(product => product.id === Number(item));\n        totalAmount += cartItems[item] * itemInfo.new_price;\n      }\n    }\n    return totalAmount;\n  };\n  const getTotalCartItems = () => {\n    let totalItem = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        totalItem += cartItems[item];\n      }\n    }\n    return totalItem;\n  };\n  const contextValue = {\n    getTotalCartItems,\n    getTotalCartAmount,\n    all_product,\n    cartItems,\n    addToCart,\n    removeFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }, this);\n};\n_s(ShopContextProvider, \"POXtcbMWIUF6U9Hbv2D9xpykgJ8=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useState","all_product","jsxDEV","_jsxDEV","ShopContext","getDefaultCart","cart","index","length","ShopContextProvider","props","_s","cartItems","setCartItems","addToCart","itemId","prev","removeFromCart","getTotalCartAmount","totalAmount","item","itemInfo","find","product","id","Number","new_price","getTotalCartItems","totalItem","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/marin/Desktop/E-commerce/frontend/src/Context/ShopContext.jsx"],"sourcesContent":["import React, { createContext, useState } from \"react\";\r\nimport all_product from \"../Components/Assets/all_product\";\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst getDefaultCart = () => {\r\n\tlet cart = {};\r\n\tfor (let index = 0; index < all_product.length+1; index++) {\r\n\t\tcart[index] = 0;\r\n\t}\r\n\treturn cart;\r\n}\r\n\r\n\r\nconst ShopContextProvider = (props) => {\r\n\tconst [cartItems, setCartItems] = useState(getDefaultCart()); \r\n\t\r\n\t\r\n\tconst addToCart = (itemId) => {\r\n\t\tsetCartItems((prev) => ({...prev,[itemId]:prev[itemId]+1}))\r\n\t\t\r\n\t}\r\n\tconst removeFromCart = (itemId) => {\r\n\t\tsetCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }))\r\n\t\t\r\n\t}\r\n\r\n\tconst getTotalCartAmount = () => {\r\n\t\tlet totalAmount = 0;\r\n\t\tfor (const item in cartItems)\r\n\t\t{\r\n\t\t\tif (cartItems[item]>0) {\r\n\t\t\t\tlet itemInfo = all_product.find((product) => product.id === Number(item));\r\n\t\t\t\ttotalAmount += cartItems[item] * itemInfo.new_price;\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn totalAmount;\r\n\t}\r\n\t\r\n\tconst getTotalCartItems = () => {\r\n\t\tlet totalItem = 0;\r\n\t\tfor (const item in cartItems)\r\n\t\t{\r\n\t\t\tif (cartItems[item] > 0) {\r\n\t\t\t\ttotalItem += cartItems[item];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn totalItem;\r\n\t}\r\n\tconst contextValue = { getTotalCartItems, getTotalCartAmount,all_product, cartItems, addToCart, removeFromCart };\r\n\treturn (\r\n\t\t<ShopContext.Provider value={contextValue}>\r\n\t\t\t{props.children}\r\n\t\t</ShopContext.Provider>\r\n\t)\r\n}\r\nexport default ShopContextProvider;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AACtD,OAAOC,WAAW,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,IAAI,CAAC;AAE9C,MAAMM,cAAc,GAAGA,CAAA,KAAM;EAC5B,IAAIC,IAAI,GAAG,CAAC,CAAC;EACb,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGN,WAAW,CAACO,MAAM,GAAC,CAAC,EAAED,KAAK,EAAE,EAAE;IAC1DD,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC;EAChB;EACA,OAAOD,IAAI;AACZ,CAAC;AAGD,MAAMG,mBAAmB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAACK,cAAc,CAAC,CAAC,CAAC;EAG5D,MAAMS,SAAS,GAAIC,MAAM,IAAK;IAC7BF,YAAY,CAAEG,IAAI,KAAM;MAAC,GAAGA,IAAI;MAAC,CAACD,MAAM,GAAEC,IAAI,CAACD,MAAM,CAAC,GAAC;IAAC,CAAC,CAAC,CAAC;EAE5D,CAAC;EACD,MAAME,cAAc,GAAIF,MAAM,IAAK;IAClCF,YAAY,CAAEG,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACD,MAAM,GAAGC,IAAI,CAACD,MAAM,CAAC,GAAG;IAAE,CAAC,CAAC,CAAC;EAElE,CAAC;EAED,MAAMG,kBAAkB,GAAGA,CAAA,KAAM;IAChC,IAAIC,WAAW,GAAG,CAAC;IACnB,KAAK,MAAMC,IAAI,IAAIR,SAAS,EAC5B;MACC,IAAIA,SAAS,CAACQ,IAAI,CAAC,GAAC,CAAC,EAAE;QACtB,IAAIC,QAAQ,GAAGpB,WAAW,CAACqB,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKC,MAAM,CAACL,IAAI,CAAC,CAAC;QACzED,WAAW,IAAIP,SAAS,CAACQ,IAAI,CAAC,GAAGC,QAAQ,CAACK,SAAS;MACpD;IACA;IACA,OAAOP,WAAW;EACpB,CAAC;EAED,MAAMQ,iBAAiB,GAAGA,CAAA,KAAM;IAC/B,IAAIC,SAAS,GAAG,CAAC;IACjB,KAAK,MAAMR,IAAI,IAAIR,SAAS,EAC5B;MACC,IAAIA,SAAS,CAACQ,IAAI,CAAC,GAAG,CAAC,EAAE;QACxBQ,SAAS,IAAIhB,SAAS,CAACQ,IAAI,CAAC;MAC7B;IACD;IACA,OAAOQ,SAAS;EACjB,CAAC;EACD,MAAMC,YAAY,GAAG;IAAEF,iBAAiB;IAAET,kBAAkB;IAACjB,WAAW;IAAEW,SAAS;IAAEE,SAAS;IAAEG;EAAe,CAAC;EAChH,oBACCd,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAG,QAAA,EACxCtB,KAAK,CAACsB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEzB,CAAC;AAAAzB,EAAA,CAzCKF,mBAAmB;AAAA4B,EAAA,GAAnB5B,mBAAmB;AA0CzB,eAAeA,mBAAmB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}